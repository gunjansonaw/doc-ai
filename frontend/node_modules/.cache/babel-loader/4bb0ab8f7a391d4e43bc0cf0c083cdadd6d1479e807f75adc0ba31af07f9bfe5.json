{"ast":null,"code":"var _jsxFileName = \"C:\\\\Doc-AI\\\\frontend\\\\src\\\\pages\\\\DocumentPage\\\\DocumentPage.jsx\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport DocumentEditor from '../../components/DocumentEditor/DocumentEditor';\n// import { Navigate } from 'react-router-dom';\nimport api from \"../../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DocumentPage = props => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [isDocExist, setIsDocExist] = useState();\n  console.log(id);\n  useEffect(() => {\n    // if docID exist render the change the state isDocExist to true\n    api.get(`/documents/isexist/${id}`).then(res => {\n      // handle success\n      res.data.document.isExist ? setIsDocExist(true) : setIsDocExist(false);\n    }).catch(function (err) {\n      console.log(err);\n    });\n    //   .then(function () {\n    //   // always executed\n    // });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isDocExist ? /*#__PURE__*/_jsxDEV(DocumentEditor, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 25\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"Document Doesn't exist in Databases\"\n    }, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_s(DocumentPage, \"qmd+Volna3w+2jTvpTsn8yDPo4A=\", false, function () {\n  return [useParams];\n});\n_c = DocumentPage;\nexport default DocumentPage;\nvar _c;\n$RefreshReg$(_c, \"DocumentPage\");","map":{"version":3,"names":["axios","useEffect","useState","useParams","DocumentEditor","api","DocumentPage","props","id","isDocExist","setIsDocExist","console","log","get","then","res","data","document","isExist","catch","err"],"sources":["C:/Doc-AI/frontend/src/pages/DocumentPage/DocumentPage.jsx"],"sourcesContent":["import axios from 'axios';\r\nimport { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport DocumentEditor from '../../components/DocumentEditor/DocumentEditor';\r\n// import { Navigate } from 'react-router-dom';\r\nimport api from \"../../api\"\r\n\r\nconst DocumentPage = (props) => {\r\n    const { id } = useParams();\r\n    const [isDocExist, setIsDocExist] = useState()\r\n    console.log(id)\r\n    useEffect(()=>{\r\n      // if docID exist render the change the state isDocExist to true\r\n      api.get(`/documents/isexist/${id}`)\r\n        .then((res) => {\r\n          // handle success\r\n          res.data.document.isExist ? setIsDocExist(true) : setIsDocExist(false)\r\n        })\r\n        .catch(function (err) {\r\n          console.log(err);\r\n        })\r\n      //   .then(function () {\r\n      //   // always executed\r\n      // });\r\n\r\n    }, [])\r\n    return (\r\n        <div>\r\n          {isDocExist ? <DocumentEditor/> : <>Document Doesn't exist in Databases</>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DocumentPage;\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,cAAc,MAAM,gDAAgD;AAC3E;AACA,OAAOC,GAAG,MAAM,WAAW;AAAA;AAAA;AAE3B,MAAMC,YAAY,GAAIC,KAAK,IAAK;EAAA;EAC5B,MAAM;IAAEC;EAAG,CAAC,GAAGL,SAAS,EAAE;EAC1B,MAAM,CAACM,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,EAAE;EAC9CS,OAAO,CAACC,GAAG,CAACJ,EAAE,CAAC;EACfP,SAAS,CAAC,MAAI;IACZ;IACAI,GAAG,CAACQ,GAAG,CAAE,sBAAqBL,EAAG,EAAC,CAAC,CAChCM,IAAI,CAAEC,GAAG,IAAK;MACb;MACAA,GAAG,CAACC,IAAI,CAACC,QAAQ,CAACC,OAAO,GAAGR,aAAa,CAAC,IAAI,CAAC,GAAGA,aAAa,CAAC,KAAK,CAAC;IACxE,CAAC,CAAC,CACDS,KAAK,CAAC,UAAUC,GAAG,EAAE;MACpBT,OAAO,CAACC,GAAG,CAACQ,GAAG,CAAC;IAClB,CAAC,CAAC;IACJ;IACA;IACA;EAEF,CAAC,EAAE,EAAE,CAAC;EACN,oBACI;IAAA,UACGX,UAAU,gBAAG,QAAC,cAAc;MAAA;MAAA;MAAA;IAAA,QAAE,gBAAG;MAAA,UAAE;IAAmC;EAAG;IAAA;IAAA;IAAA;EAAA,QACtE;AAEd,CAAC;AAAA,GAxBKH,YAAY;EAAA,QACCH,SAAS;AAAA;AAAA,KADtBG,YAAY;AA0BlB,eAAeA,YAAY;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}