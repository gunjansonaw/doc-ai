{"ast":null,"code":"var _jsxFileName = \"C:\\\\Doc-AI\\\\frontend\\\\src\\\\pages\\\\Registration\\\\Registration.jsx\",\n  _s = $RefreshSig$();\nimport \"./registration.scss\";\nimport React, { useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Registeration() {\n  _s();\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const navigate = useNavigate();\n  const handleSubmit = async event => {\n    event.preventDefault();\n    setIsLoading(true);\n    try {\n      await axios.post(\"http://localhost:8000/users/register\", {\n        name,\n        email,\n        password\n      });\n      setError(\"\");\n      navigate(\"/login\");\n    } catch (err) {\n      setError(err.response.data.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Register and Inprove your Workflow\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-div\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: name,\n        onChange: e => setName(e.target.value),\n        required: true,\n        placeholder: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-div\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        name: \"email\",\n        value: email,\n        placeholder: \"Email\",\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-div\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"password\",\n        value: password,\n        placeholder: \"Password\",\n        onChange: e => setPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      disabled: isLoading,\n      className: \"btn\",\n      children: isLoading ? \"Loading...\" : \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"border-div\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Already User of DocAI?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n_s(Registeration, \"vFnegmMVHgr7dZP+bt8GdpXhxDY=\", false, function () {\n  return [useNavigate];\n});\n_c = Registeration;\nexport default Registeration;\nvar _c;\n$RefreshReg$(_c, \"Registeration\");","map":{"version":3,"names":["React","useState","Link","useNavigate","axios","Registeration","name","setName","email","setEmail","password","setPassword","error","setError","isLoading","setIsLoading","navigate","handleSubmit","event","preventDefault","post","err","response","data","message","e","target","value","color"],"sources":["C:/Doc-AI/frontend/src/pages/Registration/Registration.jsx"],"sourcesContent":["import \"./registration.scss\";\r\nimport React, { useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nfunction Registeration() {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    setIsLoading(true);\r\n    try {\r\n      await axios.post(\"http://localhost:8000/users/register\", { name, email, password });\r\n      setError(\"\");\r\n      navigate(\"/login\");\r\n    } catch (err) {\r\n      setError(err.response.data.message);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n        <form onSubmit={handleSubmit}>\r\n          <h2>Register and Inprove your Workflow</h2>\r\n          <div className=\"input-div\">\r\n            <input\r\n              type=\"text\"\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n              required\r\n              placeholder=\"Name\"\r\n            />\r\n            {/* <label htmlFor=\"email\" className=\"\">Email Address</label> */}\r\n          </div>\r\n          <div className=\"input-div\">\r\n            <input\r\n              type=\"email\"\r\n              id=\"email\"\r\n              name=\"email\"\r\n              value={email}\r\n              placeholder=\"Email\"\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              required\r\n            />\r\n            {/* <MdOutlineMailOutline className=\"input_icons\" /> */}\r\n          </div>\r\n\r\n          <div className=\"input-div\">\r\n            {/* <label htmlFor=\"password\" className=\"\">Password</label> */}\r\n            <input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              value={password}\r\n              placeholder=\"Password\"\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              required\r\n            />\r\n            {/* <BsKey className=\"input_icons\" /> */}\r\n          </div>\r\n          {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n          <button type=\"submit\" disabled={isLoading} className=\"btn\">\r\n            {isLoading ? \"Loading...\" : \"Sign Up\"}\r\n          </button>\r\n          <div className=\"border-div\">\r\n            <span>Already User of DocAI?</span> \r\n            <span> \r\n                <Link to =\"/login\">Sign In</Link>\r\n            </span> \r\n          </div>\r\n        </form>\r\n  );\r\n}\r\n\r\nexport default Registeration;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}